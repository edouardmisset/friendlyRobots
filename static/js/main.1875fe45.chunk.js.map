{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflow","height","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","SearchField","target","value","fetch","then","response","json","users","catch","console","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAYeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,wDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACE,6BAAKF,IACL,4BAAIC,WCMGK,EAVE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,gBAAGN,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOD,EAAd,EAAcA,KAAd,OACV,cAAC,EAAD,CAAeE,GAAIA,EAAIF,KAAMA,EAAMC,MAAOA,GAA/BC,SCOJO,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKP,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVQ,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCHHI,G,MAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,SAA1C,SAAsDH,MCoBzCI,E,kDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,qDAKnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAOG,KAAKJ,MAAMC,SAChB,gEAEAG,KAAKL,MAAML,a,GAdWY,aC8CbC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAAAC,GACf,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAP1C,EAAKZ,MAAQ,CACXd,OAAQ,GACRwB,YAAa,IAJH,E,qDAYd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEnB,OAAQ+B,OACtCC,OAAM,SAAAhB,GAAK,OAAIiB,QAAQjB,MAAMA,Q,oBAGlC,WACE,MAAgCE,KAAKJ,MAA7Bd,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YACVU,EAAiBlC,EAAOmC,QAAO,SAAAC,GAAK,OACxCA,EAAM3C,KAAK4C,cAAcC,SAASd,EAAYa,kBAEhD,OAAOrC,EAAOuC,OACZ,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWO,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,OAAQkC,WAKxB,oBAAItC,UAAU,KAAd,4B,GApCYwB,aCKHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.1875fe45.chunk.js","sourcesContent":["const Card = ({ name, email, id }) => {\n  return (\n    <div className='tc bg-lightest-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robot' src={`https://robohash.org/${id}?400x400`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map(({ id, email, name }) => (\n        <Card key={id} id={id} name={name} email={email} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","const SearchBox = ({ searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='Search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","const Scroll = ({ children }) => (\n  <div style={{ overflow: 'scroll', height: '600px' }}>{children}</div>\n);\n\nexport default Scroll;\n","import { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <h1>Oops, something wrong happened</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      SearchField: '',\n    };\n  }\n\n  onSearchChange = event => {\n    this.setState({ SearchField: event.target.value });\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n      .catch(error => console.error(error));\n  }\n\n  render() {\n    const { robots, SearchField } = this.state;\n    const filteredRobots = robots.filter(robot =>\n      robot.name.toLowerCase().includes(SearchField.toLowerCase())\n    );\n    return robots.length ? (\n      <div className='tc'>\n        <h1 className='f1'>Friendly Robots</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    ) : (\n      <h1 className='tc'>Loading...</h1>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}